#include "SoftWire.h"
#include "SHT31_SW.h"
#include <Ethernet.h>
#include <EthernetUdp.h>


#define SHT31_ADDRESS 0x44

byte mac[] = {
  0xab, 0xba, 0xbe, 0xef, 0x01, 0x03
};
IPAddress ip_local(192, 168, 202, 250);
IPAddress ip_remote(192, 168, 202, 1);

EthernetUDP Udp;

void setup() {
  Serial.begin(9600);

Ethernet.begin(mac, ip_local);

 if (Ethernet.hardwareStatus() == EthernetNoHardware) {
    Serial.println("Ethernet shield was not found");
    while (true) {
      delay(1);
    }
  }
  if (Ethernet.linkStatus() == LinkOFF) {
    Serial.println("Ethernet cable is not connected.");
  }


  Udp.begin(202);
}

void read_ambient_sensor(char ambient_temp[20], char ambient_humidity[20])
{
  SoftWire sw(20, 21);  //  sda, scl
  SHT31_SW sht(SHT31_ADDRESS, &sw);

  sht.begin();
  sht.read();

  dtostrf(sht.getTemperature(), 5, 5, ambient_temp);
  dtostrf(sht.getHumidity(), 5, 5, ambient_humidity);

  sht.reset();
}

void loop() {

  char ambient_temp[20];
  char ambient_humidity[20];

  memset(ambient_temp, 0, sizeof(ambient_temp));
  memset(ambient_humidity, 0, sizeof(ambient_humidity));

  read_ambient_sensor(ambient_temp, ambient_humidity);

  char sensor_readings[1024];
  memset(sensor_readings, 0, sizeof(sensor_readings));

  int len = snprintf(sensor_readings, sizeof(sensor_readings), 
  "ambient_temperature %s, ambient_humidity %s",
           ambient_temp,
           ambient_humidity);

  Serial.println(sensor_readings);

  Udp.beginPacket(ip_remote, 202);
  Udp.write(sensor_readings, len);
  Udp.endPacket();
  
  delay(1000);
}
